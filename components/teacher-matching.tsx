"use client"

import { useState } from "react"
import { Card, CardContent } from "@/components/ui/card"
import { Button } from "@/components/ui/button"

const teacherTypes = [
  {
    type: "–°—Ç—Ä–æ–≥–∏–π –Ω–∞—Å—Ç–∞–≤–Ω–∏–∫",
    icon: "üë®‚Äçüè´",
    description: "–ß–µ—Ç–∫–∏–π –ø–ª–∞–Ω, –¥–∏—Å—Ü–∏–ø–ª–∏–Ω–∞, –∫–æ–Ω—Ç—Ä–æ–ª—å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–¥–∞–Ω–∏–π",
    traits: ["–ü—É–Ω–∫—Ç—É–∞–ª—å–Ω–æ—Å—Ç—å", "–°–∏—Å—Ç–µ–º–Ω–æ—Å—Ç—å", "–í—ã—Å–æ–∫–∏–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è"],
    color: "from-red-500 to-orange-500",
  },
  {
    type: "–î—Ä—É–∂–µ–ª—é–±–Ω—ã–π –∫–æ—É—á",
    icon: "üòä",
    description: "–ü–æ–¥–¥–µ—Ä–∂–∫–∞, –º–æ—Ç–∏–≤–∞—Ü–∏—è, –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–π –ø–æ–¥—Ö–æ–¥",
    traits: ["–≠–º–ø–∞—Ç–∏—è", "–ì–∏–±–∫–æ—Å—Ç—å", "–ü–æ–∑–∏—Ç–∏–≤–Ω—ã–π –Ω–∞—Å—Ç—Ä–æ–π"],
    color: "from-green-500 to-teal-500",
  },
  {
    type: "–ö—Ä–µ–∞—Ç–∏–≤–Ω—ã–π –º–µ–Ω—Ç–æ—Ä",
    icon: "üé®",
    description: "–ù–µ—Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –º–µ—Ç–æ–¥—ã, –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ –æ–±—ä—è—Å–Ω–µ–Ω–∏—è",
    traits: ["–¢–≤–æ—Ä—á–µ—Å–∫–∏–π –ø–æ–¥—Ö–æ–¥", "–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å", "–£–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å"],
    color: "from-purple-500 to-pink-500",
  },
  {
    type: "–¢—Ä–µ–±–æ–≤–∞—Ç–µ–ª—å–Ω—ã–π —ç–∫—Å–ø–µ—Ä—Ç",
    icon: "üéØ",
    description: "–ì–ª—É–±–æ–∫–∏–µ –∑–Ω–∞–Ω–∏—è, –≤—ã—Å–æ–∫–∏–π —É—Ä–æ–≤–µ–Ω—å –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏",
    traits: ["–≠–∫—Å–ø–µ—Ä—Ç–Ω–æ—Å—Ç—å", "–î–µ—Ç–∞–ª—å–Ω–æ—Å—Ç—å", "–†–µ–∑—É–ª—å—Ç–∞—Ç–∏–≤–Ω–æ—Å—Ç—å"],
    color: "from-blue-500 to-indigo-500",
  },
]

export function TeacherMatching() {
  const [selectedType, setSelectedType] = useState<number | null>(null)
  const scrollToSection = (href: string) => {
    const element = document.querySelector(href)
    if (element) {
      element.scrollIntoView({ behavior: "smooth" })
    }
    setIsMenuOpen(false)
  }

  return (
    <section id="teachers" className="py-20 bg-white">
      <div className="container mx-auto px-4">
        <div className="text-center mb-12">
          <h2 className="text-3xl md:text-4xl font-bold mb-4">–°–∏—Å—Ç–µ–º–∞ –ø–æ–¥–±–æ—Ä–∞ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π</h2>
          <p className="text-lg text-muted-foreground max-w-2xl mx-auto">
            –ú—ã –ø–æ–¥–±–∏—Ä–∞–µ–º –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è –ø–æ–¥ —Ç–≤–æ–π —Ö–∞—Ä–∞–∫—Ç–µ—Ä –∏ —Å—Ç–∏–ª—å –æ–±—É—á–µ–Ω–∏—è. –í—ã–±–µ—Ä–∏ —Ç–∏–ø, –∫–æ—Ç–æ—Ä—ã–π —Ç–µ–±–µ –±–ª–∏–∂–µ –≤—Å–µ–≥–æ!
          </p>
        </div>

        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 max-w-6xl mx-auto mb-12">
          {teacherTypes.map((teacher, index) => (
            <Card
              key={index}
              className={`cursor-pointer transition-all duration-300 hover:scale-105 ${
                selectedType === index ? "ring-2 ring-primary shadow-xl" : "hover:shadow-lg"
              }`}
              onClick={() => setSelectedType(selectedType === index ? null : index)}
            >
              <CardContent className="p-6 text-center space-y-4">
                <div
                  className={`w-16 h-16 bg-gradient-to-br ${teacher.color} rounded-full flex items-center justify-center mx-auto text-2xl`}
                >
                  {teacher.icon}
                </div>
                <h3 className="font-bold text-lg">{teacher.type}</h3>
                <p className="text-sm text-muted-foreground">{teacher.description}</p>

                <div className="space-y-2">
                  {teacher.traits.map((trait, traitIndex) => (
                    <div key={traitIndex} className="text-xs bg-muted px-2 py-1 rounded-full">
                      {trait}
                    </div>
                  ))}
                </div>
              </CardContent>
            </Card>
          ))}
        </div>

        {selectedType !== null && (
          <div className="max-w-2xl mx-auto text-center">
            <Card className="bg-gradient-to-br from-primary/5 to-secondary/5">
              <CardContent className="p-8">
                <h3 className="text-xl font-serif font-bold mb-4">–û—Ç–ª–∏—á–Ω—ã–π –≤—ã–±–æ—Ä! {teacherTypes[selectedType].type}</h3>
                <p className="text-muted-foreground mb-6">
                  –ú—ã –ø–æ–¥–±–µ—Ä–µ–º –¥–ª—è —Ç–µ–±—è –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è —Å —Ç–∞–∫–∏–º —Å—Ç–∏–ª–µ–º —Ä–∞–±–æ—Ç—ã. –ù–∞—à–∞ —Å–∏—Å—Ç–µ–º–∞ —É—á–∏—Ç—ã–≤–∞–µ—Ç —Ç–≤–æ–∏ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è –∏
                  –Ω–∞—Ö–æ–¥–∏—Ç –∏–¥–µ–∞–ª—å–Ω–æ–≥–æ –º–µ–Ω—Ç–æ—Ä–∞.
                </p>
                
                <Button onClick={() => scrollToSection("#readiness")}size="lg">–ù–∞–π—Ç–∏ –º–æ–µ–≥–æ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è</Button>
              </CardContent>
            </Card>
          </div>
        )}

        <div className="mt-16 text-center">
          <div className="grid grid-cols-1 md:grid-cols-3 gap-8 max-w-4xl mx-auto">
            <div className="space-y-2">
              <div className="text-2xl font-bold text-primary">500+</div>
              <p className="text-sm text-muted-foreground">–ü—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã—Ö –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π</p>
            </div>
            <div className="space-y-2">
              <div className="text-2xl font-bold text-primary">98%</div>
              <p className="text-sm text-muted-foreground">–£—Å–ø–µ—à–Ω—ã—Ö —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π</p>
            </div>
            <div className="space-y-2">
              <div className="text-2xl font-bold text-primary">24—á</div>
              <p className="text-sm text-muted-foreground">–í—Ä–µ–º—è –ø–æ–¥–±–æ—Ä–∞ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è</p>
            </div>
          </div>
        </div>
      </div>
    </section>
  )
}
