"use client"
import { useState } from "react"
import { Button } from "@/components/ui/button"
import { Card, CardContent } from "@/components/ui/card"

export function ReadinessQuiz() {
  const [showForm, setShowForm] = useState(false)
  const [showEncouragement, setShowEncouragement] = useState(false)

  const [name, setName] = useState("")
  const [phone, setPhone] = useState("")
  const [subject, setSubject] = useState("–í—ã–±–µ—Ä–∏ –ø—Ä–µ–¥–º–µ—Ç")
  const [teacher, setTeacher] = useState("–í—ã–±–µ—Ä–∏ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è")

  const [loading, setLoading] = useState(false)
  const [success, setSuccess] = useState(false)

  // ‚ö†Ô∏è –ü—Ä—è–º–æ–π —Ç–æ–∫–µ–Ω ‚Üí –ª—É—á—à–µ –≤—ã–Ω–µ—Å—Ç–∏ –≤ .env –∏ –ø—Ä–æ–∫–∏–¥—ã–≤–∞—Ç—å –Ω–∞ –∫–ª–∏–µ–Ω—Ç —á–µ—Ä–µ–∑ public –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
  const BOT_TOKEN = "8200208030:AAFbfLrLdXKedioyqVdhe3AKSQnGCoqPF3o"
  const CHAT_ID = "673699672" // —Å–≤–æ–π ID –∏–ª–∏ –≥—Ä—É–ø–ø—ã

  const handleSubmit = async () => {
    setLoading(true)

    const text = `
üìå –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –Ω–∞ –ø—Ä–æ–±–Ω–æ–µ –∑–∞–Ω—è—Ç–∏–µ:
üë§ –ò–º—è: ${name}
üìû –¢–µ–ª–µ—Ñ–æ–Ω: ${phone}
üìö –ü—Ä–µ–¥–º–µ—Ç: ${subject}
üë®‚Äçüè´ –ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å: ${teacher}
    `

    try {
      const res = await fetch(`https://api.telegram.org/bot${BOT_TOKEN}/sendMessage`, {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({
          chat_id: CHAT_ID,
          text,
          parse_mode: "HTML",
        }),
      })

      if (res.ok) {
        setSuccess(true)
      } else {
        console.error("–û—à–∏–±–∫–∞:", await res.text())
      }
    } catch (e) {
      console.error(e)
    }

    setLoading(false)
  }

  return (
    <section id = "readiness" className="py-20 bg-gradient-to-br from-primary/10 to-accent/10">
      <div className="container mx-auto px-4">
        <div className="max-w-2xl mx-auto text-center">

          {!showForm && !showEncouragement && (
            <div className="space-y-8">
              <h2 className="text-3xl md:text-4xl font-serif font-bold">–¢—ã –≥–æ—Ç–æ–≤ –∫ –ï–ì–≠?</h2>
              <div className="space-y-4">
                <Button size="lg" className="w-full text-xl py-6" onClick={() => setShowForm(true)}>–î–∞! üöÄ</Button>
                <Button variant="outline" size="lg" className="w-full text-xl py-6 bg-transparent" onClick={() => setShowEncouragement(true)}>–ï—â—ë –¥—É–º–∞—é... ü§î</Button>
              </div>
            </div>
          )}

          {showEncouragement && (
            <Card className="animate-in slide-in-from-bottom duration-500">
              <CardContent className="p-8 space-y-6">
                <h3 className="text-2xl font-serif font-bold">–ê –¥–∞–≤–∞–π –Ω–∞ –ø—Ä–æ–±–Ω–æ–µ –±–µ—Å–ø–ª–∞—Ç–Ω–æ? üòâ</h3>
                <p className="text-lg text-muted-foreground">–ù–∏–∫–∞–∫–∏—Ö –æ–±—è–∑–∞—Ç–µ–ª—å—Å—Ç–≤! –ü—Ä–æ—Å—Ç–æ –ø–æ—Å–º–æ—Ç—Ä–∏—à—å, –∫–∞–∫ –ø—Ä–æ—Ö–æ–¥—è—Ç –Ω–∞—à–∏ –∑–∞–Ω—è—Ç–∏—è.</p>
                <Button size="lg" className="w-full" onClick={() => setShowForm(true)}>–û–∫–µ–π, –ø–æ–ø—Ä–æ–±—É—é! üéØ</Button>
              </CardContent>
            </Card>
          )}

          {showForm && (
            <Card className="animate-in slide-in-from-bottom duration-500">
              <CardContent className="p-8 space-y-6">
                <h3 className="text-2xl font-serif font-bold">–ó–∞–ø–∏—Å—ã–≤–∞–π—Å—è –Ω–∞ –ø—Ä–æ–±–Ω–æ–µ! üöÄ</h3>

                {!success ? (
                  <div className="space-y-4">
                    <input type="text" placeholder="–¢–≤–æ—ë –∏–º—è" value={name} onChange={(e) => setName(e.target.value)} className="w-full p-4 rounded-lg border border-input bg-background" />
                    <input type="tel" placeholder="–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞" value={phone} onChange={(e) => setPhone(e.target.value)} className="w-full p-4 rounded-lg border border-input bg-background" />

                    <select value={subject} onChange={(e) => setSubject(e.target.value)} className="w-full p-4 rounded-lg border border-input bg-background">
                      <option>–í—ã–±–µ—Ä–∏ –ø—Ä–µ–¥–º–µ—Ç</option>
                      <option>–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞</option>
                      <option>–†—É—Å—Å–∫–∏–π —è–∑—ã–∫</option>
                      <option>–§–∏–∑–∏–∫–∞</option>
                      <option>–•–∏–º–∏—è</option>
                      <option>–ë–∏–æ–ª–æ–≥–∏—è</option>
                      <option>–ò—Å—Ç–æ—Ä–∏—è</option>
                      <option>–û–±—â–µ—Å—Ç–≤–æ–∑–Ω–∞–Ω–∏–µ</option>
                    </select>

                    <select value={teacher} onChange={(e) => setTeacher(e.target.value)} className="w-full p-4 rounded-lg border border-input bg-background">
                      <option>–í—ã–±–µ—Ä–∏ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è</option>
                      <option>üìè –°—Ç—Ä–æ–≥–∏–π –Ω–∞—Å—Ç–∞–≤–Ω–∏–∫</option>
                      <option>üòä –î—Ä—É–∂–µ–ª—é–±–Ω—ã–π –∫–æ—É—á</option>
                      <option>üé® –ö—Ä–µ–∞—Ç–∏–≤–Ω—ã–π –º–µ–Ω—Ç–æ—Ä</option>
                      <option>üéØ –¢—Ä–µ–±–æ–≤–∞—Ç–µ–ª—å–Ω—ã–π —ç–∫—Å–ø–µ—Ä—Ç</option>
                    </select>

                    <Button size="lg" className="w-full" onClick={handleSubmit} disabled={loading}>
                      {loading ? "–û—Ç–ø—Ä–∞–≤–ª—è–µ–º..." : "–ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –ø—Ä–æ–±–Ω–æ–µ üéØ"}
                    </Button>
                  </div>
                ) : (
                  <p className="text-green-600 font-bold">–ó–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞! –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å —Ç–æ–±–æ–π üöÄ</p>
                )}

                <p className="text-sm text-muted-foreground">–ü—Ä–æ–±–Ω–æ–µ –∑–∞–Ω—è—Ç–∏–µ –∞–±—Å–æ–ª—é—Ç–Ω–æ –±–µ—Å–ø–ª–∞—Ç–Ω–æ!</p>
              </CardContent>
            </Card>
          )}
        </div>
      </div>
    </section>
  )
}
